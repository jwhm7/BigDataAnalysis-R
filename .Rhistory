library(caret)
library(rpart)
library(randomForest)
library(e1071)
library(class)
set.seed(2021)
ucla <- read.csv('http://stats.idre.ucla.edu/stat/data/binary.csv')
ucla$admit <- factor(ucla$admit)
data <- ucla[sample(nrow(ucla)),]
ucla <- read.csv('http://stats.idre.ucla.edu/stat/data/binary.csv')
library(rpart)
library(randomForest)
library(e1071)
library(class)
set.seed(2021)
ucla <- read.csv('http://stats.idre.ucla.edu/stat/data/binary.csv')
setwd("~/R")
ucla <- read.csv('http://stats.idre.ucla.edu/stat/data/binary.csv')
ucla <- read.csv('http://stats.idre.ucla.edu/stat/data/binary.csv')
ucla$admit <- factor(ucla$admit)
data <- ucla[sample(nrow(ucla)),]
k <- 5
q <- nrow(data) / k
l <- 1:nrow(data)
accuracy <- 0
precision <- 0
recall <- 0
# Decision Tree
for(i in 1:k){
test_list <- ((i-1)*q+1) : (i*q)
data_test <- data[test_list, ]
data_train <- data[-test_list, ]
dt <- rpart(admit~., data_train)
pred <- predict(dt, data_test, type= 'class')
t <- table(pred, data_test$admit)
accuracy <- accuracy + (t[1,1] + t[2,2]) / nrow(data_test)
precision <- precision + t[2,2]/(t[2,1]+t[2,2])
recall <- recall + t[2,2]/(t[1,2]+t[2,2])
}
dt_avg_accuracy <- accuracy / k
dt_avg_prec <- precision / k
dt_avg_recall <- recall / k
options(digits = 4)
sprintf('결정트리: 정확도= %f, 정밀도= %f, 재현률= %f',
dt_avg_accuracy, dt_avg_prec, dt_avg_recall)
ucla <- read.csv('http://stats.idre.ucla.edu/stat/data/binary.csv')
head(ucla)
set.seed(2021)
data <- ucla[sample(nrow(ucla)),]
head(data)
ucla$admit <- factor(ucla$admit)
control <- trainControl(method='cv', number= 5)
dt <- train(admit~., data=ucla, method= 'rpart',
metric= 'Accuracy', trControl= control)
rf <- train(admit~., data=ucla, method= 'rf',
metric= 'Accuracy', trControl= control)
sv <- train(admit~., data=ucla, method= 'svmRadial',
metric= 'Accuracy', trControl= control)
kn <- train(admit~., data=ucla, method= 'knn',
metric= 'Accuracy', trControl= control)
resamp <- resamples(list(결정트리= dt, 랜덤포레스트= rf, SVM= sv, KNN= kn))
summary(resamp)
sort(resamp, decreasing= T)
dotplot(resamp)
dotplot(resamp)
