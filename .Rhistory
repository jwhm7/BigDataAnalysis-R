setwd("~/R")
setwd("~/R")
wine <- read.table('data/wine_data.txt', sep = ',')
# 1. wine 4가지 모델, 모델링, 예측, 평가
# (1) decision tree
wine <- read.table('data/wine_data.txt', sep = ',')
colums <-readLines('data/wine.name.txt')
colums <-readLines('data/wine.name.txt')
colums <-readLines('data/wine_name.txt')
wine <- read.table('data/wine_data.txt', sep = ',')
library(rpart)
library(caret)
library(lattice)
library(ggplot2)
ucla <- read.csv('http://stats.idre.ucla.edu/stat/data/binary.csv')
ucla$admit= factor(ucla$admit)
set.seed(2021)
ucla_index <- createDataPartition(ucla$admit, p= 0.8, list=F)
ucla_train <- ucla[ucla_index, ]
ucla_test <- ucla[-ucla_index, ]
dim(ucla_train)
dim(ucla_test)
table(ucla_train$admit)
ucla <- read.csv('http://stats.idre.ucla.edu/stat/data/binary.csv')
ucla$admit= factor(ucla$admit)
set.seed(2021)
ucla_index <- createDataPartition(ucla$admit, p= 0.8, list=F)
ucla_train <- ucla[ucla_index, ]
ucla_test <- ucla[-ucla_index, ]
dim(ucla_train)
dim(ucla_test)
table(ucla_train$admit)
# 모델링
dtc <- rpart(admit~., data = ucla_train)
# 예측
pred <- predict(dtc, ucla_test, type = 'class')
# 평가
confusionMatrix(pred, ucla_test$admit)
set.seed(2021)
ucla_index <- createDataPartition(ucla$admit, p= 0.8, list=F)
# 모델링
library(randomForest)
rf <- randomForest(admit~., ucla_train,
ntree= 100, nodesize= 4)
rf
rf
# 예측
pred <- predict(rf, ucla_test, type= 'class')
# 평가
confusionMatrix(pred, ucla_test$admit)
# 시각화
plot(rf)
library(caret)
library(e1071)
# 모델링
svc <- svm(admit~., ucla_train)
# 예측
pred <- predict(svc, ucla_test, type= 'class')
# 평가
table(pred, ucla_test$admit)
confusionMatrix(pred, ucla_test$admit)
# Hyper Parameter (cost= 100)
svc100 <- svm(admit~., ucla_train, cost= 100)
pred100 <- predict(svc100, ucla_test, type= 'class')
table(pred100, ucla_test$admit)
confusionMatrix(pred100, ucla_test$admit)
# Hyper Paratmeter (cost= 50)
svc50 <- svm(admit~., ucla_train, cost= 50)
pred50 <- predict(svc50, ucla_test, type= 'class')
table(pred50, ucla_test$admit)
confusionMatrix(pred50, ucla_test$admit)
# Hypter Parameter (cost= 40)
svc40 <- svm(admit~., ucla_train, cost= 40)
pred40 <- predict(svc40, ucla_test, type= 'class')
table(pred40, ucla_test$admit)
confusionMatrix(pred40, ucla_test$admit)
library(class)
# k= 5
k <- knn(ucla_train[, 1:4], ucla_test[, 1:4],
ucla_train$admit, k= 5 )
k
ucla_test$admit
confusionMatrix(k, ucla_test$admit)
# k= 3
k <- knn(ucla_train[, 1:4], ucla_test[, 1:4],
ucla_train$admit, k= 3 )
k
ucla_test$admit
confusionMatrix(k, ucla_test$admit)
# k= 7
k <- knn(ucla_train[, 1:4], ucla_test[, 1:4],
ucla_train$admit, k= 7 )
k
ucla_test$admit
confusionMatrix(k, ucla_test$admit)
getwd()
setwd("~/R")
setwd("~/R")
getwd()
setwd("~/")
getwd()
getwd()
getwd()
getwd()
setwd("~/R/data")
getwd()
wine <- read.table('data/wine_data.txt', sep = ',')
wine <- read.table('wine_data.txt', sep = ',')
getwd()
getwd()
setwd("/Users/JiwonMoon/R")
getwd()
setwd("/Users/JiwonMoon/R")
wine <- read.table('wine_data.txt', sep = ',')
wine <- read.table('wine_data.txt', sep = ',')
colums <-readLines('data/wine_name.txt')
setwd("~/R")
setwd("/Users/JiwonMoon/R")
wine <- read.table('wine_data.txt', sep = ',')
wine <- read.table('data/wine_data.txt', sep = ',')
colums <-readLines('data/wine_name.txt')
names(wine)[2:14] <- columns
columns <-readLines('data/wine_name.txt')
names(wine)[2:14] <- columns
names(wine)[2:14] <-substr(columns, 4,nchar(columns))
names(wine)[1] <- 'name'
wine$name <- factor(wine$name)
set.seed(2021)
wine_index <- createDataPartition(wine$name, p= 0.8, list=F)
wine_train <- wine[wine_index, ]
wine_test <- wine[-wine_index, ]
head(wine)
getwd()
setwd("/Users/JiwonMoon/R")
wine <- read.table('data/wine_data.txt', sep = ',')
columns <-readLines('data/wine_name.txt')
names(wine)[2:14] <- columns
names(wine)[2:14] <-substr(columns, 4,nchar(columns))
names(wine)[1] <- 'name'
wine$name <- factor(wine$name)
head(wine)
name(wine)
names(wine)[2:14] <- columns
names(wine)[2:14] <-substr(columns, 4, nchar(columns))
names(wine)
wine <- read.table('data/wine_data.txt', sep = ',')
columns <-readLines('data/wine_name.txt')
names(wine)[2:14] <- columns
names(wine)[2:14] <-substr(columns, 4, nchar(columns))
names(wine)
names(wine)[1] <- 'name'
wine$name <- factor(wine$name)
head(wine)
columns
names(wine)[1:14] <- columns
names(wine)
names(wine)[1:14] <-substr(columns, 4, nchar(columns))
names(wine)
wine <- read.table('data/wine_data.txt', sep = ',')
columns <-readLines('data/wine_name.txt')
columns
names(wine)[2:14] <- columns
names(wine)[1:14] <- columns
names(wine)
names(wine)[1:14] <-substr(columns, 4, nchar(columns))
names(wine)
names(wine)[1] <- 'name'
wine$name <- factor(wine$name)
head(wine)
getwd()
setwd("/Users/JiwonMoon/R")
wine <- read.table('data/wine_data.txt', sep = ',')
columns <-readLines('data/wine_name.txt')
columns
names(wine)[1:14] <- columns
names(wine)
names(wine)[1:14] <-substr(columns, 4, nchar(columns))
names(wine)
names(wine)[1] <- 'name'
wine$name <- factor(wine$name)
head(wine)
set.seed(2021)
wine_index <- createDataPartition(wine$name, p= 0.8, list=F)
wine_train <- wine[wine_index, ]
wine_test <- wine[-wine_index, ]
dtc <- rpart(name~., wine_train)
# 예측
pred <- predict(dtc, wine_test, type = 'class')
# 평가
confusionMatrix(pred, wine_test$name)
rf <- randomForest(name~., wine_train,
ntree= 100, nodesize= 4)
wine <- read.table('data/wine_data.txt', sep = ',')
columns <-readLines('data/wine_name.txt')
names(wine)[1:14] <- columns
names(wine)
names(wine)[1:14] <-substr(columns, 4, nchar(columns))
names(wine)
names(wine)[1] <- 'name'
wine$name <- factor(wine$name)
head(wine)
set.seed(2021)
wine_index <- createDataPartition(wine$name, p= 0.8, list=F)
wine_train <- wine[wine_index, ]
wine_test <- wine[-wine_index, ]
dtc <- rpart(name~., wine_train)
# 예측
pred <- predict(dtc, wine_test, type = 'class')
# 평가
confusionMatrix(pred, wine_test$name)
rf <- randomForest(name~., wine_train,
ntree= 100, nodesize= 4)
rf
# 예측
pred <- predict(rf, wine_test, type= 'class')
# 평가
confusionMatrix(pred, wine_test$name)
# 시각화
plot(rf)
svc <- svm(name~., wine_train)
# 예측
pred <- predict(svc, wine_test, type= 'class')
# 평가
table(pred, wine_test$name)
confusionMatrix(pred, wine_test$name)
k <- knn(wine_train[, 1:4], wine_test[, 1:4],
wine_train$name, k= 4)
k
wine_test$name
confusionMatrix(k, wine_test$name)
# Accuracy = 1
dtc <- rpart(admit~., data = ucla_train)
# 예측
pred <- predict(dtc, ucla_test, type = 'class')
# 평가
confusionMatrix(pred, ucla_test$admit)
par(mfrow=c(1,1), xpd=NA)   # 글자 다 보이게 함
plot(dtc)
text(dtc, use.n=T)
# 모델링
dtc <- rpart(name~., wine_train)
# 예측
pred <- predict(dtc, wine_test, type = 'class')
# 평가
confusionMatrix(pred, wine_test$name)
par(mfrow=c(1,1), xpd=NA)   # 글자 다 보이게 함
plot(dtc)
text(dtc, use.n=T)
